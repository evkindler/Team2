---
title: "T2 Code"
format: html
editor: visual
---

# Load Libraries

```{r}
library(tidyverse)
library(sf)
library(DBI)
library(here)
library(leaflet)
library(maptiles)
library(tidyterra)
library(knitr)
library(tigris)
library(mapview)
library(webshot)
library(htmltools)
library(mapview)

sf::sf_use_s2(FALSE)

```

# Compare Scenario Results

## Load Base Scenario into Dataframe

```{r}
base_db <- dbConnect(drv=RSQLite::SQLite(), 
                     dbname=here("model",
                                 "outputs",
                                 "Base",
                                 "tdm23.db"))
```

```{r}
base_tables <- dbListTables(base_db)
```

### Examine Results

```{r}
base_trip_prod <- dbGetQuery(base_db, 'SELECT * FROM trip_prod')

dbDisconnect(base_db)

head(base_trip_prod) |>
  kable()
```

### Examine Work Trips

```{r}
base_work_prod <- base_trip_prod |>
  filter(is.na(hbsr_p)) |>
  select(hid, 
         block_id,
         person_num,
         hbw_p,
         nhbw_p)

head(base_work_prod) |>
  kable()
```

### Examine Non-Work Trips

```{r}
base_non_work_prod <- base_trip_prod |>
  filter(is.na(hbw_p)) |>
  select(hid, 
         block_id,
         person_num,
         hbsc_p,
         hbsr_p,
         hbpb_p,
         nhbnw_p)

head(base_non_work_prod) |>
  kable()
```

### Aggregate to Census Blocks

```{r}
base_block_prod <- base_trip_prod |>
  replace_na(list(hbw_p = 0,
                  hbsc_p = 0,
                  hbsr_p = 0,
                  hbpb_p = 0,
                  nhbw_p = 0,
                  nhbnw_p = 0)) |>
  group_by(block_id) |>
  summarise(hbw_p = sum(hbw_p),
            hbsc_p = sum(hbsc_p),
            hbsr_p = sum(hbsr_p),
            hbpb_p = sum(hbpb_p),
            nhbw_p = sum(nhbw_p),
            nhbnw_p = sum(nhbnw_p))

head(base_block_prod) |>
  kable()
```

## Load Alternative Scenario into Dataframe and Examine Results

```{r}
alt_db <- dbConnect(drv=RSQLite::SQLite(), 
                     dbname=here("model",
                                 "outputs",
                                 "Alt",
                                 "tdm23.db"))

alt_trip_prod <- dbGetQuery(alt_db, 'SELECT * FROM trip_prod')

dbDisconnect(alt_db)

alt_block_prod <- alt_trip_prod |>
  replace_na(list(hbw_p = 0,
                  hbsc_p = 0,
                  hbsr_p = 0,
                  hbpb_p = 0,
                  nhbw_p = 0,
                  nhbnw_p = 0)) |>
  group_by(block_id) |>
  summarise(hbw_p_alt = sum(hbw_p),
            hbsc_p_alt = sum(hbsc_p),
            hbsr_p_alt = sum(hbsr_p),
            hbpb_p_alt = sum(hbpb_p),
            nhbw_p_alt = sum(nhbw_p),
            nhbnw_p_alt = sum(nhbnw_p))

head(alt_block_prod) |>
  kable()
```

## Join Base and Alternative Scenario Results

```{r}
tolerance <- 0.5

compare_prod <- full_join(base_block_prod, alt_block_prod) |>
  mutate(dif_hbw_p = hbw_p_alt - hbw_p,
         dif_hbsc_p = hbsc_p_alt - hbsc_p,
         dif_hbsr_p = hbsr_p_alt - hbsr_p,
         dif_hbpb_p = hbpb_p_alt - hbpb_p) |>
  filter(abs(dif_hbw_p) > tolerance |
         abs(dif_hbsc_p) > tolerance |
         abs(dif_hbsr_p) > tolerance |
         abs(dif_hbpb_p) > tolerance)
```

## Map Differences

```{r}
ma_blocks <- blocks(state = "MA", 
                          year = 2010,
                          progress_bar = FALSE) |>
  st_transform("WGS84") |>
  rename(block_id = GEOID10) |>
  select(block_id)

TAZs <- here("model",
             "inputs",
             "zonal",
             "shp",
             "CTPS_TDM23_TAZ_2017g_v202303.shp") |>
  st_read(quiet = TRUE) |>
  st_transform("WGS84") |>
  mutate(block_id = as.character(taz_id)) |>
  select(block_id)

zones <- rbind(ma_blocks, TAZs)

dif_blocks_prod <- zones |>
  right_join(compare_prod) 
```

```{r}
hb_prod_labels <- paste0(formatC(dif_blocks_prod$dif_hbw_p, format = "f", digits = 2),
                        " change in HBW trips<br/>",
                        formatC(dif_blocks_prod$dif_hbsc_p, format = "f", digits = 2), 
                        " change in HB-school trips<br/>",
                        formatC(dif_blocks_prod$dif_hbsr_p, format = "f", digits = 2),
                        " change in HB-soc/rec trips<br/>",
                        formatC(dif_blocks_prod$dif_hbpb_p, format = "f", digits = 2),
                         " change in HB-per-bus") |>
  lapply(htmltools::HTML)

leaflet(dif_blocks_prod) |>
  addProviderTiles(provider = "CartoDB.Positron") |>
  addPolygons(weight = 2,
              color = "forestgreen",
              fillColor = "forestgreen",
              fillOpacity = 0.1,
              highlightOptions = highlightOptions(weight = 3,
                                                  fillOpacity = 0.5),
              label = hb_prod_labels)
```

# Export Data So Others Can Access It

```{r}
mapshot(map, file = "leaflet_map.png")
```

```{r}
write_csv(base_trip_prod, here("T2",
                               "base_trip_prod.csv"))
write_csv(alt_trip_prod, here("T2",
                               "alt_trip_prod.csv"))
```

# Trip Attractions

## Load Base Scenario

```{r}
base_db <- dbConnect(drv=RSQLite::SQLite(), 
                     dbname=here("model",
                                 "outputs",
                                 "Base",
                                 "tdm23.db"))

base_trip_attr <- dbGetQuery(base_db, 'SELECT * FROM trip_attr')

dbDisconnect(base_db)

head(base_trip_attr) |>
  kable()


```

## Load Alternative Scenario and Join to Base Scenario

```{r}
alt_db <- dbConnect(drv=RSQLite::SQLite(), 
                     dbname=here("model",
                                 "outputs",
                                 "Alt",
                                 "tdm23.db"))

alt_trip_attr <- dbGetQuery(alt_db, 'SELECT * FROM trip_attr') |>
  rename_with(~ paste0("alt_", .x),
              ends_with("_a")) 

dbDisconnect(alt_db)

compare_attr <- full_join(base_trip_attr, alt_trip_attr) |>
  mutate(diff_hbw_inc1_a = alt_hbw_inc1_a - hbw_inc1_a,
         diff_hbw_inc2_a = alt_hbw_inc2_a - hbw_inc2_a,
         diff_hbw_inc3_a = alt_hbw_inc3_a - hbw_inc3_a,
         diff_hbw_inc4_a = alt_hbw_inc4_a - hbw_inc4_a,
         diff_hbsr_a = alt_hbsr_a - hbsr_a,
         diff_hbsc_a = alt_hbsc_a - hbsc_a,
         diff_hbpb_a = alt_hbpb_a - hbpb_a,
         diff_nhbw_a = alt_nhbw_a - nhbw_a,
         diff_nhbnw_a = alt_nhbnw_a - nhbnw_a) |>
  filter(abs(diff_hbw_inc1_a) > tolerance |
           abs(diff_hbw_inc2_a) > tolerance |
           abs(diff_hbw_inc3_a) > tolerance |
           abs(diff_hbw_inc4_a) > tolerance |
           abs(diff_hbsc_a) > tolerance |
           abs(diff_hbsr_a) > tolerance |
           abs(diff_hbpb_a) > tolerance |
           abs(diff_nhbw_a) > tolerance |
           abs(diff_nhbnw_a) > tolerance)
```

## Map Differences

```{r}
dif_blocks_attr <- zones |>
  right_join(compare_attr) 
```

```{r}
attr_labels <- paste0(formatC(dif_blocks_attr$diff_hbw_inc1_a, format = "f", digits = 2),
                        " change in HBW trips (< $35k)<br/>",
                      formatC(dif_blocks_attr$diff_hbw_inc2_a, format = "f", digits = 2),
                        " change in HBW trips ($35k - $65k)<br/>",
                      formatC(dif_blocks_attr$diff_hbw_inc3_a, format = "f", digits = 2),
                        " change in HBW trips ($65k - $100k)<br/>",
                      formatC(dif_blocks_attr$diff_hbw_inc4_a, format = "f", digits = 2),
                        " change in HBW trips (> $100k)<br/>",
                        formatC(dif_blocks_attr$diff_hbsc_a, format = "f", digits = 2), 
                        " change in HB-school trips<br/>",
                        formatC(dif_blocks_attr$diff_hbsr_a, format = "f", digits = 2),
                        " change in HB-soc/rec trips<br/>",
                        formatC(dif_blocks_attr$diff_hbpb_a, format = "f", digits = 2),
                         " change in HB-per-bus<br/>",
                      formatC(dif_blocks_attr$diff_nhbw_a, format = "f", digits = 2),
                        " non-home-based work trips<br/>",
                      formatC(dif_blocks_attr$diff_nhbnw_a, format = "f", digits = 2),
                        " change in non-home-based non-work trips") |>
  lapply(htmltools::HTML)

leaflet(dif_blocks_attr) |>
  addProviderTiles(provider = "CartoDB.Positron") |>
  addPolygons(weight = 2,
              color = "forestgreen",
              fillColor = "forestgreen",
              fillOpacity = 0.1,
              highlightOptions = highlightOptions(weight = 3,
                                                  fillOpacity = 0.5),
              label = attr_labels)
```

# Non-Home-Based Trip Productions

## Load Base Scenario

```{r}
base_db <- dbConnect(drv=RSQLite::SQLite(), 
                     dbname=here("model",
                                 "outputs",
                                 "Base",
                                 "tdm23.db"))

base_trip_nhb <- dbGetQuery(base_db, 'SELECT * FROM prod_nhb')

dbDisconnect(base_db)

head(base_trip_nhb) |>
  kable()
```

## Load Alternative Scenario and Join to Base Scenario

```{r}
alt_db <- dbConnect(drv=RSQLite::SQLite(), 
                     dbname=here("model",
                                 "outputs",
                                 "Alt",
                                 "tdm23.db"))

alt_trip_nhb <- dbGetQuery(alt_db, 'SELECT * FROM prod_nhb') |>
  rename_with(~ paste0("alt_", .x),
              ends_with("_p")) 

dbDisconnect(alt_db)

compare_nhb <- full_join(base_trip_nhb, alt_trip_nhb) |>
  mutate(diff_nhbw_p = alt_nhbw_p - nhbw_p,
         diff_nhbnw_p = alt_nhbnw_p - nhbnw_p) |>
  filter(abs(diff_nhbw_p) > tolerance |
           abs(diff_nhbnw_p) > tolerance)
```

## Map Differences

```{r}
dif_blocks_nhb <- zones |>
  right_join(compare_nhb) 
```

```{r}
nhb_labels <- paste0(formatC(dif_blocks_nhb$diff_nhbw_p, format = "f", digits = 2),
                        " non-home-based work trips<br/>",
                      formatC(dif_blocks_nhb$diff_nhbnw_p, format = "f", digits = 2),
                        " change in non-home-based non-work trips") |>
  lapply(htmltools::HTML)

leaflet(dif_blocks_nhb) |>
  addProviderTiles(provider = "CartoDB.Positron") |>
  addPolygons(weight = 2,
              color = "forestgreen",
              fillColor = "forestgreen",
              fillOpacity = 0.1,
              highlightOptions = highlightOptions(weight = 3,
                                                  fillOpacity = 0.5),
              label = nhb_labels)
```
